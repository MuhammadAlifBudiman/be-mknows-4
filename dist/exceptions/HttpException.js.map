{"version":3,"sources":["../../src/exceptions/HttpException.ts"],"sourcesContent":["/**\n * Custom HTTP exception classes for error handling in API responses.\n * Extends the built-in Error class to include status, success, and error details.\n */\nexport class HttpException extends Error {\n  /** Indicates if the request was successful (always false for errors) */\n  public success: boolean;\n  /** HTTP status code for the error */\n  public status: number;\n  /** Error message */\n  public message: string;\n  /** Optional array of error details */\n  public errors?: string[];\n\n  /**\n   * Constructs a new HttpException\n   * @param success - Indicates success (false for errors)\n   * @param status - HTTP status code\n   * @param message - Error message\n   * @param errors - Optional array of error details\n   */\n  constructor(success: boolean, status: number, message: string, errors?: string[]) {\n    super(message);\n    this.success = success;\n    this.status = status;\n    this.message = message;\n    this.errors = errors;\n  }\n}\n\n/**\n * Specialized exception for rate limiting (HTTP 429 Too Many Requests)\n */\nexport class HttpExceptionTooManyRequests extends HttpException {\n  /**\n   * Constructs a new TooManyRequests exception\n   * @param errors - Array of error details\n   */\n  constructor(errors: string[]) {\n    super(false, 429, \"TOO_MANY_REQUEST\", errors);\n  }\n}"],"names":["HttpException","HttpExceptionTooManyRequests","Error","constructor","success","status","message","errors"],"mappings":";;;;;;;;;;;QAIaA;eAAAA;;QA6BAC;eAAAA;;;;;;;;;;;;;;;;AA7BN,IAAA,AAAMD,gBAAN,MAAMA,sBAAsBE;IAiBjCC,YAAYC,OAAgB,EAAEC,MAAc,EAAEC,OAAe,EAAEC,MAAiB,CAAE;QAChF,KAAK,CAACD,UAhBR,uBAAOF,WAAP,KAAA,IAEA,uBAAOC,UAAP,KAAA,IAEA,uBAAOC,WAAP,KAAA,IAEA,uBAAOC,UAAP,KAAA;QAWE,IAAI,CAACH,OAAO,GAAGA;QACf,IAAI,CAACC,MAAM,GAAGA;QACd,IAAI,CAACC,OAAO,GAAGA;QACf,IAAI,CAACC,MAAM,GAAGA;IAChB;AACF;AAKO,IAAA,AAAMN,+BAAN,MAAMA,qCAAqCD;IAKhDG,YAAYI,MAAgB,CAAE;QAC5B,KAAK,CAAC,OAAO,KAAK,oBAAoBA;IACxC;AACF"}