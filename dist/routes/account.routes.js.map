{"version":3,"sources":["../../src/routes/account.routes.ts"],"sourcesContent":["/**\n * Route definition for account-related endpoints.\n * Uses AccountController for business logic and applies authentication and validation middleware.\n */\nimport { Router } from \"express\"; // Express router\nimport { Routes } from \"@interfaces/routes.interface\"; // Route interface\n\nimport { AccountController } from \"@controllers/account.controller\"; // Controller for account operations\nimport { AuthMiddleware } from \"@middlewares/auth.middleware\"; // Middleware for authentication\nimport { ValidationMiddleware } from \"@middlewares/validation.middleware\"; // Middleware for request validation\nimport { UpdateUserProfileDto } from \"@dtos/account.dto\"; // DTO for profile update validation\n\n/**\n * AccountRoute class implements account-related routes.\n * - path: Base path for account routes\n * - router: Express router instance\n * - account: AccountController instance\n */\nexport class AccountRoute implements Routes {\n  public path = \"account\";\n  public router = Router();\n  public account = new AccountController();\n\n  constructor() {\n    this.initializeRoutes();\n  }\n\n  /**\n   * Initializes account routes and applies middleware.\n   * - GET /profile/me: Get current user's profile\n   * - GET /sessions/me: Get current user's session histories\n   * - PUT /profile/me: Update current user's profile (with validation)\n   */\n  private initializeRoutes() {\n    this.router.get(`/v1/${this.path}/profile/me`, AuthMiddleware, this.account.getMyProfile);\n    this.router.get(`/v1/${this.path}/sessions/me`, AuthMiddleware, this.account.getMySessionsHistories);\n    this.router.put(`/v1/${this.path}/profile/me`, AuthMiddleware, ValidationMiddleware(UpdateUserProfileDto), this.account.updateMyProfile);\n  }\n}"],"names":["AccountRoute","initializeRoutes","router","get","path","AuthMiddleware","account","getMyProfile","getMySessionsHistories","put","ValidationMiddleware","UpdateUserProfileDto","updateMyProfile","constructor","Router","AccountController"],"mappings":";;;;+BAkBaA;;;eAAAA;;;yBAdU;mCAGW;gCACH;sCACM;4BACA;;;;;;;;;;;;;;AAQ9B,IAAA,AAAMA,eAAN,MAAMA;IAeHC,mBAAmB;QACzB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC,WAAW,CAAC,EAAEC,8BAAc,EAAE,IAAI,CAACC,OAAO,CAACC,YAAY;QACxF,IAAI,CAACL,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC,YAAY,CAAC,EAAEC,8BAAc,EAAE,IAAI,CAACC,OAAO,CAACE,sBAAsB;QACnG,IAAI,CAACN,MAAM,CAACO,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACL,IAAI,CAAC,WAAW,CAAC,EAAEC,8BAAc,EAAEK,IAAAA,0CAAoB,EAACC,gCAAoB,GAAG,IAAI,CAACL,OAAO,CAACM,eAAe;IACzI;IAdAC,aAAc;QAJd,uBAAOT,QAAO;QACd,uBAAOF,UAASY,IAAAA,eAAM;QACtB,uBAAOR,WAAU,IAAIS,oCAAiB;QAGpC,IAAI,CAACd,gBAAgB;IACvB;AAaF"}