{"version":3,"sources":["../../src/routes/users.routes.ts"],"sourcesContent":["import { Router } from \"express\";\nimport { Routes } from \"@interfaces/routes.interface\";\n\nimport { UserController } from \"@controllers/user.controller\";\nimport { AuthMiddleware, AuthorizedRoles } from \"@middlewares/auth.middleware\";\nimport Limitter from \"@middlewares/rate-limitter.middleware\";\n// import { ValidationMiddleware } from \"@middlewares/validation.middleware\";\n// import { CreateUserDto } from \"@dtos/users.dto\";\n\nexport class UserRoute implements Routes {\n  public path = \"users\";\n  public router = Router();\n  public user = new UserController();\n  public limitter = new Limitter();\n\n  constructor() {\n    this.initializeRoutes();\n  }\n\n  private initializeRoutes() {\n    this.router.get(`/v1/users/check`, this.user.getUseragent);\n    this.router.get(`/v1/${this.path}`, \n      this.limitter.default(), \n      AuthMiddleware, AuthorizedRoles([\"ADMIN\"]), \n      this.user.getUsers\n    );\n    this.router.get(`/v1/${this.path}/:uuid`, this.user.getUserByUUID);\n  }\n}"],"names":["UserRoute","initializeRoutes","router","get","user","getUseragent","path","limitter","default","AuthMiddleware","AuthorizedRoles","getUsers","getUserByUUID","constructor","Router","UserController","Limitter"],"mappings":";;;;+BASaA;;;eAAAA;;;yBATU;gCAGQ;gCACiB;+EAC3B;;;;;;;;;;;;;;;;;;;AAId,IAAA,AAAMA,YAAN,MAAMA;IAUHC,mBAAmB;QACzB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,eAAe,CAAC,EAAE,IAAI,CAACC,IAAI,CAACC,YAAY;QACzD,IAAI,CAACH,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACG,IAAI,EAAE,EAChC,IAAI,CAACC,QAAQ,CAACC,OAAO,IACrBC,8BAAc,EAAEC,IAAAA,+BAAe,EAAC;YAAC;SAAQ,GACzC,IAAI,CAACN,IAAI,CAACO,QAAQ;QAEpB,IAAI,CAACT,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACG,IAAI,CAAC,MAAM,CAAC,EAAE,IAAI,CAACF,IAAI,CAACQ,aAAa;IACnE;IAZAC,aAAc;QALd,uBAAOP,QAAO;QACd,uBAAOJ,UAASY,IAAAA,eAAM;QACtB,uBAAOV,QAAO,IAAIW,8BAAc;QAChC,uBAAOR,YAAW,IAAIS,+BAAQ;QAG5B,IAAI,CAACf,gBAAgB;IACvB;AAWF"}