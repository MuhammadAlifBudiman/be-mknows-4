{"version":3,"sources":["../../src/routes/replies.routes.ts"],"sourcesContent":["// Import the Routes interface for route structure\nimport { Routes } from \"@/interfaces/routes.interface\";\n// Import authentication middleware to protect reply routes\nimport { AuthMiddleware } from \"@/middlewares/auth.middleware\";\n// Import validation middleware to validate request bodies\nimport { ValidationMiddleware } from \"@/middlewares/validation.middleware\";\n// Import Express Router for route definitions\nimport { Router } from \"express\";\n// Import the ReplyController to handle reply-related logic\nimport { ReplyController } from \"@/controllers/reply.controller\";\n// Import DTOs for creating and updating replies\nimport { CreateReplyDto, UpdateReplyDto } from \"@/dtos/replies.dto\";\n\n/**\n * Route definition class for reply-related endpoints.\n * Implements the Routes interface to provide path, router, and controller.\n */\nexport class ReplyRoute implements Routes {\n    /**\n     * The base path for reply routes.\n     * @type {string}\n     */\n    public path = \"replies\";\n    /**\n     * Express router instance for reply routes.\n     * @type {Router}\n     */\n    public router = Router();\n    /**\n     * Controller instance to handle reply logic.\n     * @type {ReplyController}\n     */\n    public controller = new ReplyController();\n\n    /**\n     * Initializes the reply route and sets up endpoints.\n     */\n    constructor() {\n        this.initializeRoutes();\n    }\n\n    /**\n     * Defines all reply-related endpoints and their middlewares.\n     *\n     * - GET /v1/replies: Get all replies\n     * - GET /v1/replies/:comment_id: Get replies for a specific comment\n     * - POST /v1/replies/:comment_id: Create a new reply (auth, validation)\n     * - PUT /v1/replies/:reply_id: Update a reply (auth, validation)\n     * - DELETE /v1/replies/:reply_id: Delete a reply (auth)\n     * - POST /v1/replies/:reply_id/like: Like a reply (auth)\n     */\n    private initializeRoutes() {\n        // Get all replies\n        this.router.get(`/v1/${this.path}`, this.controller.getReplies);\n        // Get replies by comment ID\n        this.router.get(`/v1/${this.path}/:comment_id`, this.controller.getRepliesByComment);\n        // Create a new reply (requires authentication and validation)\n        this.router.post(`/v1/${this.path}/:comment_id`, AuthMiddleware, ValidationMiddleware(CreateReplyDto), this.controller.createReply);\n        // Update a reply (requires authentication and validation)\n        this.router.put(`/v1/${this.path}/:reply_id`, AuthMiddleware, ValidationMiddleware(UpdateReplyDto), this.controller.updateReply);\n        // Delete a reply (requires authentication)\n        this.router.delete(`/v1/${this.path}/:reply_id`, AuthMiddleware, this.controller.deleteReply);\n        // Like a reply (requires authentication)\n        this.router.post(`/v1/${this.path}/:reply_id/like`, AuthMiddleware, this.controller.likeReply);\n    }\n\n}"],"names":["ReplyRoute","initializeRoutes","router","get","path","controller","getReplies","getRepliesByComment","post","AuthMiddleware","ValidationMiddleware","CreateReplyDto","createReply","put","UpdateReplyDto","updateReply","delete","deleteReply","likeReply","constructor","Router","ReplyController"],"mappings":";;;;+BAiBaA;;;eAAAA;;;gCAdkB;sCAEM;yBAEd;iCAES;4BAEe;;;;;;;;;;;;;;AAMxC,IAAA,AAAMA,aAAN,MAAMA;IAkCDC,mBAAmB;QAEvB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACC,IAAI,EAAE,EAAE,IAAI,CAACC,UAAU,CAACC,UAAU;QAE9D,IAAI,CAACJ,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAACC,UAAU,CAACE,mBAAmB;QAEnF,IAAI,CAACL,MAAM,CAACM,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAACJ,IAAI,CAAC,YAAY,CAAC,EAAEK,8BAAc,EAAEC,IAAAA,0CAAoB,EAACC,0BAAc,GAAG,IAAI,CAACN,UAAU,CAACO,WAAW;QAElI,IAAI,CAACV,MAAM,CAACW,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACT,IAAI,CAAC,UAAU,CAAC,EAAEK,8BAAc,EAAEC,IAAAA,0CAAoB,EAACI,0BAAc,GAAG,IAAI,CAACT,UAAU,CAACU,WAAW;QAE/H,IAAI,CAACb,MAAM,CAACc,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,CAACZ,IAAI,CAAC,UAAU,CAAC,EAAEK,8BAAc,EAAE,IAAI,CAACJ,UAAU,CAACY,WAAW;QAE5F,IAAI,CAACf,MAAM,CAACM,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAACJ,IAAI,CAAC,eAAe,CAAC,EAAEK,8BAAc,EAAE,IAAI,CAACJ,UAAU,CAACa,SAAS;IACjG;IA3BAC,aAAc;QAfd,uBAAOf,QAAO;QAKd,uBAAOF,UAASkB,IAAAA,eAAM;QAKtB,uBAAOf,cAAa,IAAIgB,gCAAe;QAMnC,IAAI,CAACpB,gBAAgB;IACzB;AA2BJ"}