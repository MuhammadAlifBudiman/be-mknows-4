{"version":3,"sources":["../../src/routes/comments.routes.ts"],"sourcesContent":["/**\n * Route definition for comment-related endpoints.\n * Uses CommentController for business logic and applies authentication and validation middleware.\n */\n// Import the CommentController to handle comment-related requests\nimport { CommentController } from \"@/controllers/comment.controller\";\n// Import DTOs for creating and updating comments\nimport { CreateCommentDto, UpdateCommentDto } from \"@/dtos/comments.dto\";\n// Import the Routes interface for route structure\nimport { Routes } from \"@/interfaces/routes.interface\";\n// Import authentication middleware to protect routes\nimport { AuthMiddleware } from \"@/middlewares/auth.middleware\";\n// Import validation middleware to validate request bodies\nimport { ValidationMiddleware } from \"@/middlewares/validation.middleware\";\n// Import Express Router for route definitions\nimport { Router } from \"express\";\n\n/**\n * Route definition class for comment-related endpoints.\n * Implements the Routes interface to provide path, router, and controller.\n */\nexport class CommentRoute implements Routes {\n    /**\n     * The base path for comment routes.\n     * @type {string}\n     */\n    public path = \"comments\";\n    /**\n     * Express router instance for comment routes.\n     * @type {Router}\n     */\n    public router = Router();\n    /**\n     * Controller instance to handle comment logic.\n     * @type {CommentController}\n     */\n    public controller = new CommentController();\n\n    /**\n     * Initializes the comment route and sets up endpoints.\n     */\n    constructor() {\n        this.initializeRoutes();\n    }\n\n    /**\n     * Defines all comment-related endpoints and their middlewares.\n     *\n     * - GET /v1/comments: Get all comments\n     * - GET /v1/comments/:article_id: Get comments for a specific article\n     * - POST /v1/comments/:article_id: Create a new comment (auth, validation)\n     * - PUT /v1/comments/:comment_id: Update a comment (auth, validation)\n     * - DELETE /v1/comments/:comment_id: Delete a comment (auth)\n     * - POST /v1/comments/:comment_id/like: Like a comment (auth)\n     */\n    private initializeRoutes() {\n        // Get all comments\n        this.router.get(`/v1/${this.path}`, this.controller.getComments);\n        // Get comments by article ID\n        this.router.get(`/v1/${this.path}/:article_id`, this.controller.getCommentsByArticle);\n        // Create a new comment (requires authentication and validation)\n        this.router.post(`/v1/${this.path}/:article_id`, AuthMiddleware, ValidationMiddleware(CreateCommentDto), this.controller.createComment);\n        // Update a comment (requires authentication and validation)\n        this.router.put(`/v1/${this.path}/:comment_id`, AuthMiddleware, ValidationMiddleware(UpdateCommentDto), this.controller.updateComment);\n        // Delete a comment (requires authentication)\n        this.router.delete(`/v1/${this.path}/:comment_id`, AuthMiddleware, this.controller.deleteComment);\n        // Like a comment (requires authentication)\n        this.router.post(`/v1/${this.path}/:comment_id/like`, AuthMiddleware, this.controller.likeComment);\n    }\n\n}"],"names":["CommentRoute","initializeRoutes","router","get","path","controller","getComments","getCommentsByArticle","post","AuthMiddleware","ValidationMiddleware","CreateCommentDto","createComment","put","UpdateCommentDto","updateComment","delete","deleteComment","likeComment","constructor","Router","CommentController"],"mappings":";;;;+BAqBaA;;;eAAAA;;;mCAhBqB;6BAEiB;gCAIpB;sCAEM;yBAEd;;;;;;;;;;;;;;AAMhB,IAAA,AAAMA,eAAN,MAAMA;IAkCDC,mBAAmB;QAEvB,IAAI,CAACC,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACC,IAAI,EAAE,EAAE,IAAI,CAACC,UAAU,CAACC,WAAW;QAE/D,IAAI,CAACJ,MAAM,CAACC,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACC,IAAI,CAAC,YAAY,CAAC,EAAE,IAAI,CAACC,UAAU,CAACE,oBAAoB;QAEpF,IAAI,CAACL,MAAM,CAACM,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAACJ,IAAI,CAAC,YAAY,CAAC,EAAEK,8BAAc,EAAEC,IAAAA,0CAAoB,EAACC,6BAAgB,GAAG,IAAI,CAACN,UAAU,CAACO,aAAa;QAEtI,IAAI,CAACV,MAAM,CAACW,GAAG,CAAC,CAAC,IAAI,EAAE,IAAI,CAACT,IAAI,CAAC,YAAY,CAAC,EAAEK,8BAAc,EAAEC,IAAAA,0CAAoB,EAACI,6BAAgB,GAAG,IAAI,CAACT,UAAU,CAACU,aAAa;QAErI,IAAI,CAACb,MAAM,CAACc,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,CAACZ,IAAI,CAAC,YAAY,CAAC,EAAEK,8BAAc,EAAE,IAAI,CAACJ,UAAU,CAACY,aAAa;QAEhG,IAAI,CAACf,MAAM,CAACM,IAAI,CAAC,CAAC,IAAI,EAAE,IAAI,CAACJ,IAAI,CAAC,iBAAiB,CAAC,EAAEK,8BAAc,EAAE,IAAI,CAACJ,UAAU,CAACa,WAAW;IACrG;IA3BAC,aAAc;QAfd,uBAAOf,QAAO;QAKd,uBAAOF,UAASkB,IAAAA,eAAM;QAKtB,uBAAOf,cAAa,IAAIgB,oCAAiB;QAMrC,IAAI,CAACpB,gBAAgB;IACzB;AA2BJ"}