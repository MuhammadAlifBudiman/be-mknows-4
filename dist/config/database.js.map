{"version":3,"sources":["../../src/config/database.js"],"sourcesContent":["/**\n * Database configuration for Sequelize ORM\n * Reads environment variables for connection details\n */\nconst { NODE_ENV, DB_HOST, DB_PORT, DB_USER, DB_PASSWORD, DB_DATABASE } = process.env;\n\nmodule.exports = {\n  /**\n   * Development environment configuration\n   * Uses PostgreSQL with SSL enabled\n   */\n  development: {\n    dialect: \"postgres\", // Database dialect\n    host: DB_HOST,       // Hostname from env\n    username: DB_USER,   // Username from env\n    password: DB_PASSWORD, // Password from env\n    database: DB_DATABASE, // Database name from env\n    port: DB_PORT,       // Port from env\n    define: {\n      underscored: true,      // Use snake_case for columns\n      freezeTableName: true,  // Prevent pluralizing table names\n      paranoid: true,         // Enable soft deletes\n      createdAt: \"created_at\", // Custom createdAt column name\n      updatedAt: \"updated_at\", // Custom updatedAt column name\n      deletedAt: \"deleted_at\", // Custom deletedAt column name\n    },\n    pool: {\n      min: 0, // Minimum connections in pool\n      max: 5, // Maximum connections in pool\n    },\n    logQueryParameters: NODE_ENV === \"development\", // Log query params in dev\n    logging: false,    // Disable SQL query logging\n    benchmark: false,  // Disable query benchmarking\n    ssl: true,         // Enable SSL connection\n    dialectOptions: {\n      ssl: {\n        require: true,             // Require SSL\n        rejectUnauthorized: false, // Allow self-signed certs\n      },\n      sslmode: \"require\",         // Enforce SSL mode\n    },\n  },\n  /**\n   * Production environment configuration\n   * Similar to development, but logging is always disabled\n   */\n  production: {\n    dialect: \"postgres\",\n    host: DB_HOST,\n    username: DB_USER,\n    password: DB_PASSWORD,\n    database: DB_DATABASE,\n    port: DB_PORT,\n    define: {\n      underscored: true,\n      freezeTableName: true,\n      paranoid: true,\n      createdAt: \"created_at\",\n      updatedAt: \"updated_at\",\n      deletedAt: \"deleted_at\",\n    },\n    logging: false,\n    benchmark: false,\n    ssl: true,\n    dialectOptions: {\n      ssl: {\n        require: true,\n        rejectUnauthorized: false,\n      },\n      sslmode: \"require\",\n    },\n  }\n}"],"names":["NODE_ENV","DB_HOST","DB_PORT","DB_USER","DB_PASSWORD","DB_DATABASE","process","env","module","exports","development","dialect","host","username","password","database","port","define","underscored","freezeTableName","paranoid","createdAt","updatedAt","deletedAt","pool","min","max","logQueryParameters","logging","benchmark","ssl","dialectOptions","require","rejectUnauthorized","sslmode","production"],"mappings":";AAIA,MAAM,EAAEA,QAAQ,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,WAAW,EAAEC,WAAW,EAAE,GAAGC,QAAQC,GAAG;AAErFC,OAAOC,OAAO,GAAG;IAKfC,aAAa;QACXC,SAAS;QACTC,MAAMX;QACNY,UAAUV;QACVW,UAAUV;QACVW,UAAUV;QACVW,MAAMd;QACNe,QAAQ;YACNC,aAAa;YACbC,iBAAiB;YACjBC,UAAU;YACVC,WAAW;YACXC,WAAW;YACXC,WAAW;QACb;QACAC,MAAM;YACJC,KAAK;YACLC,KAAK;QACP;QACAC,oBAAoB3B,aAAa;QACjC4B,SAAS;QACTC,WAAW;QACXC,KAAK;QACLC,gBAAgB;YACdD,KAAK;gBACHE,SAAS;gBACTC,oBAAoB;YACtB;YACAC,SAAS;QACX;IACF;IAKAC,YAAY;QACVxB,SAAS;QACTC,MAAMX;QACNY,UAAUV;QACVW,UAAUV;QACVW,UAAUV;QACVW,MAAMd;QACNe,QAAQ;YACNC,aAAa;YACbC,iBAAiB;YACjBC,UAAU;YACVC,WAAW;YACXC,WAAW;YACXC,WAAW;QACb;QACAK,SAAS;QACTC,WAAW;QACXC,KAAK;QACLC,gBAAgB;YACdD,KAAK;gBACHE,SAAS;gBACTC,oBAAoB;YACtB;YACAC,SAAS;QACX;IACF;AACF"}