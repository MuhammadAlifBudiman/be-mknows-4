{"version":3,"sources":["../../src/dtos/users.dto.ts"],"sourcesContent":["/**\n * Data Transfer Objects for user creation, login, and update.\n * Uses class-validator decorators to enforce validation rules for each property.\n */\nimport { IsString, IsEmail, IsNotEmpty, MinLength, MaxLength } from \"class-validator\";\n\n/**\n * DTO for creating a new user.\n * - email: Required, must be a valid email address.\n * - password: Required string, 4-32 characters.\n * - full_name: Required string.\n */\nexport class CreateUserDto {\n  /** User email (required, must be valid email) */\n  @IsEmail()\n  public email: string;\n\n  /** User password (required, 4-32 characters) */\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(32)\n  public password: string;\n  \n  /** User full name (required) */\n  @IsString()\n  @IsNotEmpty()\n  public full_name: string;\n}\n\n/**\n * DTO for user login.\n * - email: Required, must be a valid email address.\n * - password: Required string, 4-32 characters.\n */\nexport class LoginUserDto {\n  /** User email (required, must be valid email) */\n  @IsEmail()\n  public email: string;\n\n  /** User password (required, 4-32 characters) */\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(4)\n  @MaxLength(32)\n  public password: string;\n}\n\n/**\n * DTO for updating user password.\n * - password: Required string, 9-32 characters.\n */\nexport class UpdateUserDto {\n  /** User password (required, 9-32 characters) */\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(9)\n  @MaxLength(32)\n  public password: string;\n}"],"names":["CreateUserDto","LoginUserDto","UpdateUserDto","email","password","full_name"],"mappings":";;;;;;;;;;;QAYaA;eAAAA;;QAuBAC;eAAAA;;QAiBAC;eAAAA;;;gCAhDuD;;;;;;;;;;;;;;;;;;;;;;;AAQ7D,IAAA,AAAMF,gBAAN,MAAMA;;QAEX,uBACOG,SADP,KAAA;QAIA,uBAIOC,YAJP,KAAA;QAOA,uBAEOC,aAFP,KAAA;;AAGF;;;;;;;;;;;;;;;;;AAOO,IAAA,AAAMJ,eAAN,MAAMA;;QAEX,uBACOE,SADP,KAAA;QAIA,uBAIOC,YAJP,KAAA;;AAKF;;;;;;;;;;;;AAMO,IAAA,AAAMF,gBAAN,MAAMA;;QAEX,uBAIOE,YAJP,KAAA;;AAKF"}