{"version":3,"sources":["../../src/database/index.ts"],"sourcesContent":["import { Sequelize } from \"sequelize\";\nimport { NODE_ENV } from \"@config/index\";\nimport { logger } from \"@utils/logger\";\nimport config from \"@config/database\";\nimport { ensureDatabaseExists } from \"./ensureDatabase\";\nimport OTPModel from \"@/models/otps.model\";\nimport RoleModel from \"@models/roles.model\";\nimport FileModel from \"@models/files.model\";\nimport UserModel from \"@models/users.model\";\nimport UserRoleModel from \"@models/users_roles.model\";\nimport UserSessionModel from \"@models/users_sessions.model\";\nimport CategoryModel from \"@models/categories.model\";\nimport ArticleModel from \"@models/articles.model\";\nimport ArticleCategoryModel from \"@models/articles_categories.model\";\nimport ArticleLikeModel from \"@models/articles_likes.model\";\nimport ArticleCommentModel from \"@/models/articles_comments.model\";\nimport CommentReplyModel from \"@/models/articles_replies.model\";\nimport ArticleCommentLikeModel from \"@/models/articles_comments_like.model\";\nimport CommentReplyLikeModel from \"@/models/articles_replies_like.model\";\nimport ArticleBookmarkModel from \"@/models/articles_bookmark.model\";\nimport ArticleViewModel from \"@/models/articles_views.model\";\n\nconst dbConfig = config[NODE_ENV] || config[\"development\"];\n\n// Ensure DB exists before initializing Sequelize\nlet DB: any;\n\n(async () => {\n  await ensureDatabaseExists();\n\n  const sequelize = new Sequelize(\n    dbConfig.database as string,\n    dbConfig.username as string,\n    dbConfig.password,\n    dbConfig\n  );\n\n  await sequelize.authenticate();\n  logger.info(`=> Database Connected on ${NODE_ENV}`);\n\n  DB = {\n    OTPs: OTPModel(sequelize),\n    Files: FileModel(sequelize),\n    Roles: RoleModel(sequelize),\n    Users: UserModel(sequelize),\n    UsersRoles: UserRoleModel(sequelize),\n    UsersSessions: UserSessionModel(sequelize),\n    Categories: CategoryModel(sequelize),\n    Articles: ArticleModel(sequelize),\n    ArticlesCategories: ArticleCategoryModel(sequelize),\n    ArticlesLikes: ArticleLikeModel(sequelize),\n    ArticlesComments: ArticleCommentModel(sequelize),\n    CommentsReplies: CommentReplyModel(sequelize),\n    ArticleCommentsLikes: ArticleCommentLikeModel(sequelize),\n    CommentsRepliesLikes: CommentReplyLikeModel(sequelize),\n    ArticlesBookmarks: ArticleBookmarkModel(sequelize),\n    ArticlesViews: ArticleViewModel(sequelize),\n    sequelize, // connection instance (RAW queries)\n    Sequelize, // library\n  };\n})();\n\nexport { DB };"],"names":["DB","dbConfig","config","NODE_ENV","ensureDatabaseExists","sequelize","Sequelize","database","username","password","authenticate","logger","info","OTPs","OTPModel","Files","FileModel","Roles","RoleModel","Users","UserModel","UsersRoles","UserRoleModel","UsersSessions","UserSessionModel","Categories","CategoryModel","Articles","ArticleModel","ArticlesCategories","ArticleCategoryModel","ArticlesLikes","ArticleLikeModel","ArticlesComments","ArticleCommentModel","CommentsReplies","CommentReplyModel","ArticleCommentsLikes","ArticleCommentLikeModel","CommentsRepliesLikes","CommentReplyLikeModel","ArticlesBookmarks","ArticleBookmarkModel","ArticlesViews","ArticleViewModel"],"mappings":";;;;+BA8DSA;;;eAAAA;;;2BA9DiB;uBACD;wBACF;iEACJ;gCACkB;kEAChB;mEACC;mEACA;mEACA;yEACI;4EACG;wEACH;sEACD;iFACQ;4EACJ;+EACG;8EACF;oFACM;mFACF;+EACD;4EACJ;;;;;;AAE7B,MAAMC,WAAWC,iBAAM,CAACC,eAAQ,CAAC,IAAID,iBAAM,CAAC,cAAc;AAG1D,IAAIF;AAEH,CAAA;IACC,MAAMI,IAAAA,oCAAoB;IAE1B,MAAMC,YAAY,IAAIC,oBAAS,CAC7BL,SAASM,QAAQ,EACjBN,SAASO,QAAQ,EACjBP,SAASQ,QAAQ,EACjBR;IAGF,MAAMI,UAAUK,YAAY;IAC5BC,cAAM,CAACC,IAAI,CAAC,CAAC,yBAAyB,EAAET,eAAQ,EAAE;IAElDH,KAAK;QACHa,MAAMC,IAAAA,kBAAQ,EAACT;QACfU,OAAOC,IAAAA,mBAAS,EAACX;QACjBY,OAAOC,IAAAA,mBAAS,EAACb;QACjBc,OAAOC,IAAAA,mBAAS,EAACf;QACjBgB,YAAYC,IAAAA,yBAAa,EAACjB;QAC1BkB,eAAeC,IAAAA,4BAAgB,EAACnB;QAChCoB,YAAYC,IAAAA,wBAAa,EAACrB;QAC1BsB,UAAUC,IAAAA,sBAAY,EAACvB;QACvBwB,oBAAoBC,IAAAA,iCAAoB,EAACzB;QACzC0B,eAAeC,IAAAA,4BAAgB,EAAC3B;QAChC4B,kBAAkBC,IAAAA,+BAAmB,EAAC7B;QACtC8B,iBAAiBC,IAAAA,8BAAiB,EAAC/B;QACnCgC,sBAAsBC,IAAAA,oCAAuB,EAACjC;QAC9CkC,sBAAsBC,IAAAA,mCAAqB,EAACnC;QAC5CoC,mBAAmBC,IAAAA,+BAAoB,EAACrC;QACxCsC,eAAeC,IAAAA,4BAAgB,EAACvC;QAChCA;QACAC,WAAAA,oBAAS;IACX;AACF,CAAA"}