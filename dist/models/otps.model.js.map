{"version":3,"sources":["../../src/models/otps.model.ts"],"sourcesContent":["/**\n * Sequelize model definition for OTPs (One-Time Passwords).\n * Represents OTP entities for user authentication and verification.\n */\nimport { Sequelize, DataTypes, Model, Optional } from \"sequelize\";\n\nimport { OTP } from \"@interfaces/otp.interface\";\n\n/**\n * Type for OTP creation attributes, omitting pk and uuid for auto-generation.\n */\nexport type OTPCreationAttributes = Optional<OTP, \"pk\" | \"uuid\">;\n\n/**\n * OTPModel class for Sequelize ORM.\n * Implements OTP interface. Attributes are handled by Sequelize.\n */\nexport class OTPModel extends Model<OTP, OTPCreationAttributes> {\n  // No public fields here! Let Sequelize handle attributes.\n}\n\n/**\n * Initializes the OTPModel with Sequelize instance and sets up model fields.\n * @param sequelize - Sequelize connection instance\n * @returns OTPModel class\n */\nexport default function (sequelize: Sequelize): typeof OTPModel {\n  OTPModel.init(\n    {\n      pk: {\n        type: DataTypes.INTEGER,\n        primaryKey: true,\n        autoIncrement: true,\n      },\n      uuid: {\n        type: DataTypes.UUID,\n        defaultValue: DataTypes.UUIDV4,\n      },\n      user_id: {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        // references: UserModel, key: \"pk\"\n        // onDelete/onUpdate: \"CASCADE\"\n      },\n      key: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      type: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      status: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      expired_at: {\n        type: DataTypes.DATE,\n        allowNull: false,\n      },\n    },\n    {\n      tableName: \"otps\", // Table name in DB\n      timestamps: true,    // Enable created_at/updated_at\n      paranoid: true,      // Enable soft deletes (deleted_at)\n      sequelize            // Sequelize instance\n    },\n  );\n\n  return OTPModel;\n}"],"names":["OTPModel","Model","sequelize","init","pk","type","DataTypes","INTEGER","primaryKey","autoIncrement","uuid","UUID","defaultValue","UUIDV4","user_id","allowNull","key","STRING","status","expired_at","DATE","tableName","timestamps","paranoid"],"mappings":";;;;;;;;;;;QAiBaA;eAAAA;;QASb;eAAA;;;2BAtBsD;AAa/C,IAAA,AAAMA,WAAN,MAAMA,iBAAiBC,gBAAK;AAEnC;AAOe,SAAf,SAAyBC,SAAoB;IAC3CF,SAASG,IAAI,CACX;QACEC,IAAI;YACFC,MAAMC,oBAAS,CAACC,OAAO;YACvBC,YAAY;YACZC,eAAe;QACjB;QACAC,MAAM;YACJL,MAAMC,oBAAS,CAACK,IAAI;YACpBC,cAAcN,oBAAS,CAACO,MAAM;QAChC;QACAC,SAAS;YACPT,MAAMC,oBAAS,CAACC,OAAO;YACvBQ,WAAW;QAGb;QACAC,KAAK;YACHX,MAAMC,oBAAS,CAACW,MAAM;YACtBF,WAAW;QACb;QACAV,MAAM;YACJA,MAAMC,oBAAS,CAACW,MAAM;YACtBF,WAAW;QACb;QACAG,QAAQ;YACNb,MAAMC,oBAAS,CAACW,MAAM;YACtBF,WAAW;QACb;QACAI,YAAY;YACVd,MAAMC,oBAAS,CAACc,IAAI;YACpBL,WAAW;QACb;IACF,GACA;QACEM,WAAW;QACXC,YAAY;QACZC,UAAU;QACVrB;IACF;IAGF,OAAOF;AACT"}