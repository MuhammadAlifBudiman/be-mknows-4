{"version":3,"sources":["../../src/models/otps.model.ts"],"sourcesContent":["import { Sequelize, DataTypes, Model, Optional } from \"sequelize\";\n\nimport { OTP } from \"@interfaces/otp.interface\";\n\nexport type OTPCreationAttributes = Optional<OTP, \"pk\" | \"uuid\">;\n\nexport class OTPModel extends Model<OTP, OTPCreationAttributes> implements OTP {\n  public pk: number;\n  public uuid: string;\n  \n  public user_id: number;\n\n  public key: string; // otp nya\n  public type: string; // FORGET_PASSWORD, EMAIL_VERIFICATION\n  public status: string; // AVAILABLE, USED, EXPIRED\n\n  public expired_at: Date;\n\n  public readonly created_at!: Date;\n  public readonly updated_at!: Date;\n  public readonly deleted_at: Date;\n}\n\nexport default function (sequelize: Sequelize): typeof OTPModel {\n  OTPModel.init(\n    {\n      pk: {\n        type: DataTypes.INTEGER,\n        primaryKey: true,\n        autoIncrement: true,\n      },\n      uuid: {\n        type: DataTypes.UUID,\n        defaultValue: DataTypes.UUIDV4,\n      },\n      user_id: {\n        type: DataTypes.INTEGER,\n        allowNull: false,\n        // references: {\n        //   model: UserModel,\n        //   key: \"pk\",\n        // },\n        // onDelete: \"CASCADE\",\n        // onUpdate: \"CASCADE\",\n      },\n      key: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      type: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      status: {\n        type: DataTypes.STRING,\n        allowNull: false,\n      },\n      expired_at: {\n        type: DataTypes.DATE,\n        allowNull: false,\n      },\n    },\n    {\n      tableName: \"otps\",\n      timestamps: true,\n      paranoid: true,\n      sequelize\n    },\n  );\n\n  return OTPModel;\n}"],"names":["OTPModel","Model","pk","uuid","user_id","key","type","status","expired_at","created_at","updated_at","deleted_at","sequelize","init","DataTypes","INTEGER","primaryKey","autoIncrement","UUID","defaultValue","UUIDV4","allowNull","STRING","DATE","tableName","timestamps","paranoid"],"mappings":";;;;;;;;;;;QAMaA;eAAAA;;QAiBb;eAAA;;;2BAvBsD;;;;;;;;;;;;;;AAM/C,IAAA,AAAMA,WAAN,MAAMA,iBAAiBC,gBAAK;;QAA5B,gBACL,uBAAOC,MAAP,KAAA,IACA,uBAAOC,QAAP,KAAA,IAEA,uBAAOC,WAAP,KAAA,IAEA,uBAAOC,OAAP,KAAA,IACA,uBAAOC,QAAP,KAAA,IACA,uBAAOC,UAAP,KAAA,IAEA,uBAAOC,cAAP,KAAA,IAEA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA;;AACF;AAEe,SAAf,SAAyBC,SAAoB;IAC3CZ,SAASa,IAAI,CACX;QACEX,IAAI;YACFI,MAAMQ,oBAAS,CAACC,OAAO;YACvBC,YAAY;YACZC,eAAe;QACjB;QACAd,MAAM;YACJG,MAAMQ,oBAAS,CAACI,IAAI;YACpBC,cAAcL,oBAAS,CAACM,MAAM;QAChC;QACAhB,SAAS;YACPE,MAAMQ,oBAAS,CAACC,OAAO;YACvBM,WAAW;QAOb;QACAhB,KAAK;YACHC,MAAMQ,oBAAS,CAACQ,MAAM;YACtBD,WAAW;QACb;QACAf,MAAM;YACJA,MAAMQ,oBAAS,CAACQ,MAAM;YACtBD,WAAW;QACb;QACAd,QAAQ;YACND,MAAMQ,oBAAS,CAACQ,MAAM;YACtBD,WAAW;QACb;QACAb,YAAY;YACVF,MAAMQ,oBAAS,CAACS,IAAI;YACpBF,WAAW;QACb;IACF,GACA;QACEG,WAAW;QACXC,YAAY;QACZC,UAAU;QACVd;IACF;IAGF,OAAOZ;AACT"}