{"version":3,"sources":["../../src/models/articles_comments.model.ts"],"sourcesContent":["/**\n * Sequelize model definition for article comments.\n * Represents comments made by users on articles, including associations and scopes.\n */\n// src/models/article-comments.model.ts\nimport { Sequelize, DataTypes, Model, Optional } from \"sequelize\";\nimport { Comment } from \"@/interfaces/comment.interface\";\nimport { UserModel } from \"./users.model\";\nimport { FileModel } from \"./files.model\";\nimport { User } from \"@/interfaces/user.interface\";\nimport { Article } from \"@/interfaces/article.interface\";\nimport { ArticleModel } from \"./articles.model\";\n\n/**\n * Type for article comment creation attributes, omitting pk and uuid for auto-generation.\n */\nexport type ArticleCommentCreationAttributes = Optional<Comment, \"pk\" | \"uuid\">;\n\n/**\n * ArticleCommentModel class for Sequelize ORM.\n * Implements Comment interface and adds associations and timestamp fields.\n */\nexport class ArticleCommentModel extends Model<Comment, ArticleCommentCreationAttributes> implements Comment {\n  public pk: number;              // Primary key\n  public uuid: string;            // Unique identifier\n  public article_id: number;      // Associated article ID\n  public author_id: number;       // Author's user ID\n  public comment: string;         // Comment text\n\n  public readonly article: Article; // Associated article object\n  public readonly author: User;     // Associated author object\n\n  public replies: number;         // Number of replies\n  public likes: number;           // Number of likes\n\n  public readonly created_at!: Date; // Timestamp for creation\n  public readonly updated_at!: Date; // Timestamp for last update\n  public readonly deleted_at: Date;  // Timestamp for deletion (paranoid)\n}\n\n/**\n * Initializes the ArticleCommentModel with Sequelize instance and sets up associations and scopes.\n * @param sequelize - Sequelize connection instance\n * @returns ArticleCommentModel class\n */\nexport default function (sequelize: Sequelize): typeof ArticleCommentModel {\n  ArticleCommentModel.init(\n    {\n      pk: {\n        type: DataTypes.INTEGER,\n        primaryKey: true,\n        autoIncrement: true,\n      },\n      uuid: {\n        type: DataTypes.UUID,\n        defaultValue: DataTypes.UUIDV4,\n      },\n      article_id: {\n        allowNull: false,\n        type: DataTypes.INTEGER,\n      },\n      author_id: {\n        allowNull: false,\n        type: DataTypes.INTEGER,\n      },\n      comment: {\n        type: DataTypes.TEXT,\n        allowNull: false,\n      },\n    },\n    {\n      tableName: \"articles_comments\", // Table name in DB\n      timestamps: true,                // Enable created_at/updated_at\n      paranoid: true,                  // Enable soft deletes (deleted_at)\n      sequelize,                       // Sequelize instance\n      defaultScope: {\n        include: [\n          {\n            attributes: [\"uuid\", \"full_name\", \"display_picture\"],\n            model: UserModel,\n            as: \"author\",\n            include: [\n              {\n                attributes: [\"uuid\"],\n                model: FileModel,\n                as: \"avatar\"\n              }\n            ]\n          },\n          {\n            attributes: [\"uuid\", \"title\"],\n            model: ArticleModel,\n            as: \"article\",\n          },\n        ]\n      }\n    },\n  );\n\n  // Set up associations\n  ArticleModel.hasMany(ArticleCommentModel, { foreignKey: \"article_id\", as: \"comments\" });\n  ArticleCommentModel.belongsTo(ArticleModel, { foreignKey: \"article_id\", as: \"article\" });\n  ArticleCommentModel.belongsTo(UserModel, { foreignKey: \"author_id\", as: \"author\" });\n\n  return ArticleCommentModel;\n}\n"],"names":["ArticleCommentModel","Model","pk","uuid","article_id","author_id","comment","article","author","replies","likes","created_at","updated_at","deleted_at","sequelize","init","type","DataTypes","INTEGER","primaryKey","autoIncrement","UUID","defaultValue","UUIDV4","allowNull","TEXT","tableName","timestamps","paranoid","defaultScope","include","attributes","model","UserModel","as","FileModel","ArticleModel","hasMany","foreignKey","belongsTo"],"mappings":";;;;;;;;;;;QAsBaA;eAAAA;;QAuBb;eAAA;;;2BAxCsD;4BAE5B;4BACA;+BAGG;;;;;;;;;;;;;;AAWtB,IAAA,AAAMA,sBAAN,MAAMA,4BAA4BC,gBAAK;;QAAvC,gBACL,uBAAOC,MAAP,KAAA,IACA,uBAAOC,QAAP,KAAA,IACA,uBAAOC,cAAP,KAAA,IACA,uBAAOC,aAAP,KAAA,IACA,uBAAOC,WAAP,KAAA,IAEA,uBAAgBC,WAAhB,KAAA,IACA,uBAAgBC,UAAhB,KAAA,IAEA,uBAAOC,WAAP,KAAA,IACA,uBAAOC,SAAP,KAAA,IAEA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA;;AACF;AAOe,SAAf,SAAyBC,SAAoB;IAC3Cd,oBAAoBe,IAAI,CACtB;QACEb,IAAI;YACFc,MAAMC,oBAAS,CAACC,OAAO;YACvBC,YAAY;YACZC,eAAe;QACjB;QACAjB,MAAM;YACJa,MAAMC,oBAAS,CAACI,IAAI;YACpBC,cAAcL,oBAAS,CAACM,MAAM;QAChC;QACAnB,YAAY;YACVoB,WAAW;YACXR,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAb,WAAW;YACTmB,WAAW;YACXR,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAZ,SAAS;YACPU,MAAMC,oBAAS,CAACQ,IAAI;YACpBD,WAAW;QACb;IACF,GACA;QACEE,WAAW;QACXC,YAAY;QACZC,UAAU;QACVd;QACAe,cAAc;YACZC,SAAS;gBACP;oBACEC,YAAY;wBAAC;wBAAQ;wBAAa;qBAAkB;oBACpDC,OAAOC,qBAAS;oBAChBC,IAAI;oBACJJ,SAAS;wBACP;4BACEC,YAAY;gCAAC;6BAAO;4BACpBC,OAAOG,qBAAS;4BAChBD,IAAI;wBACN;qBACD;gBACH;gBACA;oBACEH,YAAY;wBAAC;wBAAQ;qBAAQ;oBAC7BC,OAAOI,2BAAY;oBACnBF,IAAI;gBACN;aACD;QACH;IACF;IAIFE,2BAAY,CAACC,OAAO,CAACrC,qBAAqB;QAAEsC,YAAY;QAAcJ,IAAI;IAAW;IACrFlC,oBAAoBuC,SAAS,CAACH,2BAAY,EAAE;QAAEE,YAAY;QAAcJ,IAAI;IAAU;IACtFlC,oBAAoBuC,SAAS,CAACN,qBAAS,EAAE;QAAEK,YAAY;QAAaJ,IAAI;IAAS;IAEjF,OAAOlC;AACT"}