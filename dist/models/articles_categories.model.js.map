{"version":3,"sources":["../../src/models/articles_categories.model.ts"],"sourcesContent":["/**\n * Sequelize model definition for the relationship between articles and categories.\n * Sets up many-to-many associations and model fields for article-category mapping.\n */\nimport { Sequelize, DataTypes, Model } from \"sequelize\";\n\nimport { ArticleModel } from \"@models/articles.model\";\nimport { CategoryModel } from \"@models/categories.model\";\n\nimport { ArticleCategory } from \"@interfaces/article.interface\";\n\n/**\n * Type for article-category creation attributes.\n */\nexport type ArticleCategoryCreationAttributes = ArticleCategory;\n\n/**\n * ArticleCategoryModel class for Sequelize ORM.\n * Implements ArticleCategory interface and adds timestamp fields.\n */\nexport class ArticleCategoryModel extends Model<ArticleCategory, ArticleCategoryCreationAttributes> implements ArticleCategory {\n  public article_id: number; // ID of the article\n  public category_id: number; // ID of the category\n\n  public readonly created_at!: Date; // Timestamp for creation\n  public readonly updated_at!: Date; // Timestamp for last update\n  public readonly deleted_at: Date;  // Timestamp for deletion (paranoid)\n}\n\n/**\n * Initializes the ArticleCategoryModel with Sequelize instance and sets up associations.\n * @param sequelize - Sequelize connection instance\n * @returns ArticleCategoryModel class\n */\nexport default function (sequelize: Sequelize): typeof ArticleCategoryModel {\n  ArticleCategoryModel.init(\n    {\n      article_id: {\n        allowNull: false,\n        type: DataTypes.INTEGER,\n      },\n      category_id: {\n        allowNull: false,\n        type: DataTypes.INTEGER,\n      },\n    },\n    {\n      tableName: \"articles_categories\", // Table name in DB\n      timestamps: true,                // Enable created_at/updated_at\n      paranoid: true,                  // Enable soft deletes (deleted_at)\n      sequelize,                       // Sequelize instance\n    },\n  );\n\n  // Set up many-to-many and one-to-many associations\n  ArticleModel.belongsToMany(CategoryModel, { through: ArticleCategoryModel, foreignKey: \"article_id\" });\n  CategoryModel.belongsToMany(ArticleModel, { through: ArticleCategoryModel, foreignKey: \"category_id\" });\n\n  ArticleModel.hasMany(ArticleCategoryModel, { foreignKey: \"article_id\", as: \"categories\" });\n  ArticleCategoryModel.belongsTo(ArticleModel, { foreignKey: \"article_id\", as: \"article\" });\n\n  CategoryModel.hasMany(ArticleCategoryModel, { foreignKey: \"category_id\", as: \"category\" });\n  ArticleCategoryModel.belongsTo(CategoryModel, { foreignKey: \"category_id\", as: \"category\" });\n\n  return ArticleCategoryModel;\n}"],"names":["ArticleCategoryModel","Model","article_id","category_id","created_at","updated_at","deleted_at","sequelize","init","allowNull","type","DataTypes","INTEGER","tableName","timestamps","paranoid","ArticleModel","belongsToMany","CategoryModel","through","foreignKey","hasMany","as","belongsTo"],"mappings":";;;;;;;;;;;QAoBaA;eAAAA;;QAcb;eAAA;;;2BA9B4C;+BAEf;iCACC;;;;;;;;;;;;;;AAavB,IAAA,AAAMA,uBAAN,MAAMA,6BAA6BC,gBAAK;;QAAxC,gBACL,uBAAOC,cAAP,KAAA,IACA,uBAAOC,eAAP,KAAA,IAEA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA;;AACF;AAOe,SAAf,SAAyBC,SAAoB;IAC3CP,qBAAqBQ,IAAI,CACvB;QACEN,YAAY;YACVO,WAAW;YACXC,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAT,aAAa;YACXM,WAAW;YACXC,MAAMC,oBAAS,CAACC,OAAO;QACzB;IACF,GACA;QACEC,WAAW;QACXC,YAAY;QACZC,UAAU;QACVR;IACF;IAIFS,2BAAY,CAACC,aAAa,CAACC,8BAAa,EAAE;QAAEC,SAASnB;QAAsBoB,YAAY;IAAa;IACpGF,8BAAa,CAACD,aAAa,CAACD,2BAAY,EAAE;QAAEG,SAASnB;QAAsBoB,YAAY;IAAc;IAErGJ,2BAAY,CAACK,OAAO,CAACrB,sBAAsB;QAAEoB,YAAY;QAAcE,IAAI;IAAa;IACxFtB,qBAAqBuB,SAAS,CAACP,2BAAY,EAAE;QAAEI,YAAY;QAAcE,IAAI;IAAU;IAEvFJ,8BAAa,CAACG,OAAO,CAACrB,sBAAsB;QAAEoB,YAAY;QAAeE,IAAI;IAAW;IACxFtB,qBAAqBuB,SAAS,CAACL,8BAAa,EAAE;QAAEE,YAAY;QAAeE,IAAI;IAAW;IAE1F,OAAOtB;AACT"}