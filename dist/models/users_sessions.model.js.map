{"version":3,"sources":["../../src/models/users_sessions.model.ts"],"sourcesContent":["/**\n * Sequelize model definition for user sessions.\n * Represents session entities for user authentication and tracking.\n */\nimport { Sequelize, DataTypes, Model, Optional } from \"sequelize\";\nimport { UserSession } from \"@interfaces/user-session.interface\";\nimport { UserModel } from \"@models/users.model\";\n\n/**\n * Type for user session creation attributes, omitting pk and uuid for auto-generation.\n */\nexport type UserSessionCreationAttributes = Optional<UserSession, \"pk\" | \"uuid\">;\n\n/**\n * UserSessionModel class for Sequelize ORM.\n * Implements UserSession interface. Attributes are handled by Sequelize.\n */\nexport class UserSessionModel extends Model<UserSession, UserSessionCreationAttributes> {\n  uuid: string; // Session UUID\n  // No public fields here! Let Sequelize handle attributes.\n}\n\n/**\n * Initializes the UserSessionModel with Sequelize instance and sets up model fields and associations.\n * @param sequelize - Sequelize connection instance\n * @returns UserSessionModel class\n */\nexport default function (sequelize: Sequelize): typeof UserSessionModel {\n  UserSessionModel.init(\n    {\n      pk: {\n        autoIncrement: true,\n        primaryKey: true,\n        type: DataTypes.INTEGER,\n      },\n      uuid: {\n        allowNull: true,\n        defaultValue: DataTypes.UUIDV4,\n        type: DataTypes.STRING(52),\n      },\n      user_id: {\n        allowNull: false,\n        type: DataTypes.INTEGER(),\n      },\n      useragent: {\n        allowNull: false,\n        type: DataTypes.STRING(320),\n      },\n      ip_address: {\n        allowNull: false,\n        type: DataTypes.STRING(64),\n      },\n      status: {\n        allowNull: false,\n        type: DataTypes.STRING(512),\n      },\n    },\n    {\n      tableName: \"users_sessions\", // Table name in DB\n      timestamps: true,             // Enable created_at/updated_at\n      paranoid: true,               // Enable soft deletes (deleted_at)\n      sequelize,                    // Sequelize instance\n    },\n  );\n\n  // Set up association to UserModel\n  UserSessionModel.belongsTo(UserModel, {\n    foreignKey: \"user_id\",\n    as: \"user\"\n  });\n\n  return UserSessionModel;\n}"],"names":["UserSessionModel","Model","uuid","sequelize","init","pk","autoIncrement","primaryKey","type","DataTypes","INTEGER","allowNull","defaultValue","UUIDV4","STRING","user_id","useragent","ip_address","status","tableName","timestamps","paranoid","belongsTo","UserModel","foreignKey","as"],"mappings":";;;;;;;;;;;QAiBaA;eAAAA;;QAUb;eAAA;;;2BAvBsD;4BAE5B;;;;;;;;;;;;;;AAWnB,IAAA,AAAMA,mBAAN,MAAMA,yBAAyBC,gBAAK;;QAApC,gBACLC,uBAAAA,QAAAA,KAAAA;;AAEF;AAOe,SAAf,SAAyBC,SAAoB;IAC3CH,iBAAiBI,IAAI,CACnB;QACEC,IAAI;YACFC,eAAe;YACfC,YAAY;YACZC,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAR,MAAM;YACJS,WAAW;YACXC,cAAcH,oBAAS,CAACI,MAAM;YAC9BL,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACzB;QACAC,SAAS;YACPJ,WAAW;YACXH,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAM,WAAW;YACTL,WAAW;YACXH,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACzB;QACAG,YAAY;YACVN,WAAW;YACXH,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACzB;QACAI,QAAQ;YACNP,WAAW;YACXH,MAAMC,oBAAS,CAACK,MAAM,CAAC;QACzB;IACF,GACA;QACEK,WAAW;QACXC,YAAY;QACZC,UAAU;QACVlB;IACF;IAIFH,iBAAiBsB,SAAS,CAACC,qBAAS,EAAE;QACpCC,YAAY;QACZC,IAAI;IACN;IAEA,OAAOzB;AACT"}