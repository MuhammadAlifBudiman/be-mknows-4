{"version":3,"sources":["../../src/models/articles_replies.model.ts"],"sourcesContent":["/**\n * Sequelize model definition for replies to article comments.\n * Represents replies made by users to comments, including associations and scopes.\n */\nimport { Comment, CommentReply } from \"@/interfaces/comment.interface\";\nimport { User } from \"@/interfaces/user.interface\";\nimport { DataTypes, Model, Optional } from \"sequelize\";\nimport { ArticleCommentModel } from \"./articles_comments.model\";\nimport { UserModel } from \"./users.model\";\nimport { FileModel } from \"./files.model\";\n\n\n/**\n * Type for reply creation attributes, omitting pk and uuid for auto-generation.\n */\nexport type ArticleReplyCreationAttributes = Optional<CommentReply, \"pk\" | \"uuid\">;\n\n/**\n * CommentReplyModel class for Sequelize ORM.\n * Implements CommentReply interface and adds associations and timestamp fields.\n */\nexport class CommentReplyModel extends Model<CommentReply, ArticleReplyCreationAttributes> implements CommentReply {\n  public pk: number;              // Primary key\n  public uuid: string;            // Unique identifier\n  public comment_id: number;      // Associated comment ID\n  public author_id: number;       // Author's user ID\n  public reply: string;           // Reply text\n\n  public readonly author: User;   // Associated author object\n  public readonly comment: Comment; // Associated comment object\n  public likes: number;           // Number of likes\n\n  public readonly created_at!: Date; // Timestamp for creation\n  public readonly updated_at!: Date; // Timestamp for last update\n  public readonly deleted_at: Date;  // Timestamp for deletion (paranoid)\n}\n\n/**\n * Initializes the CommentReplyModel with Sequelize instance and sets up associations and scopes.\n * @param sequelize - Sequelize connection instance\n * @returns CommentReplyModel class\n */\nexport default function (sequelize: any): typeof CommentReplyModel {\n  CommentReplyModel.init(\n    {\n      pk: {\n        type: DataTypes.INTEGER,\n        primaryKey: true,\n        autoIncrement: true,\n      },\n      uuid: {\n        type: DataTypes.UUID,\n        defaultValue: DataTypes.UUIDV4,\n      },\n      comment_id: {\n        allowNull: false,\n        type: DataTypes.INTEGER,\n      },\n      author_id: {\n        allowNull: false,\n        type: DataTypes.INTEGER,\n      },\n      reply: {\n        type: DataTypes.TEXT,\n        allowNull: false,\n      },\n    },\n    {\n      tableName: \"articles_replies\", // Table name in DB\n      timestamps: true,                // Enable created_at/updated_at\n      paranoid: true,                  // Enable soft deletes (deleted_at)\n      sequelize,                       // Sequelize instance\n      defaultScope: {\n        include: [\n          {\n            attributes: [\"uuid\", \"full_name\", \"display_picture\"],\n            model: UserModel,\n            as: \"author\",\n            include: [\n              {\n                attributes: [\"uuid\"],\n                model: FileModel,\n                as: \"avatar\"\n              }\n            ]\n          },\n          {\n            attributes: [\"uuid\", \"comment\"],\n            model: ArticleCommentModel,\n            as: \"comment\"\n          }\n        ]\n      }\n    },\n  );\n\n  // Set up associations\n  ArticleCommentModel.hasMany(CommentReplyModel, { foreignKey: \"comment_id\", as: \"replies\" });\n  CommentReplyModel.belongsTo(ArticleCommentModel, { foreignKey: \"comment_id\", as: \"comment\" });\n  CommentReplyModel.belongsTo(UserModel, { foreignKey: \"author_id\", as: \"author\" });\n\n  return CommentReplyModel;\n}"],"names":["CommentReplyModel","Model","pk","uuid","comment_id","author_id","reply","author","comment","likes","created_at","updated_at","deleted_at","sequelize","init","type","DataTypes","INTEGER","primaryKey","autoIncrement","UUID","defaultValue","UUIDV4","allowNull","TEXT","tableName","timestamps","paranoid","defaultScope","include","attributes","model","UserModel","as","FileModel","ArticleCommentModel","hasMany","foreignKey","belongsTo"],"mappings":";;;;;;;;;;;QAqBaA;eAAAA;;QAqBb;eAAA;;;2BApC2C;wCACP;4BACV;4BACA;;;;;;;;;;;;;;AAYnB,IAAA,AAAMA,oBAAN,MAAMA,0BAA0BC,gBAAK;;QAArC,gBACL,uBAAOC,MAAP,KAAA,IACA,uBAAOC,QAAP,KAAA,IACA,uBAAOC,cAAP,KAAA,IACA,uBAAOC,aAAP,KAAA,IACA,uBAAOC,SAAP,KAAA,IAEA,uBAAgBC,UAAhB,KAAA,IACA,uBAAgBC,WAAhB,KAAA,IACA,uBAAOC,SAAP,KAAA,IAEA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA,IACA,uBAAgBC,cAAhB,KAAA;;AACF;AAOe,SAAf,SAAyBC,SAAc;IACrCb,kBAAkBc,IAAI,CACpB;QACEZ,IAAI;YACFa,MAAMC,oBAAS,CAACC,OAAO;YACvBC,YAAY;YACZC,eAAe;QACjB;QACAhB,MAAM;YACJY,MAAMC,oBAAS,CAACI,IAAI;YACpBC,cAAcL,oBAAS,CAACM,MAAM;QAChC;QACAlB,YAAY;YACVmB,WAAW;YACXR,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAZ,WAAW;YACTkB,WAAW;YACXR,MAAMC,oBAAS,CAACC,OAAO;QACzB;QACAX,OAAO;YACLS,MAAMC,oBAAS,CAACQ,IAAI;YACpBD,WAAW;QACb;IACF,GACA;QACEE,WAAW;QACXC,YAAY;QACZC,UAAU;QACVd;QACAe,cAAc;YACZC,SAAS;gBACP;oBACEC,YAAY;wBAAC;wBAAQ;wBAAa;qBAAkB;oBACpDC,OAAOC,qBAAS;oBAChBC,IAAI;oBACJJ,SAAS;wBACP;4BACEC,YAAY;gCAAC;6BAAO;4BACpBC,OAAOG,qBAAS;4BAChBD,IAAI;wBACN;qBACD;gBACH;gBACA;oBACEH,YAAY;wBAAC;wBAAQ;qBAAU;oBAC/BC,OAAOI,2CAAmB;oBAC1BF,IAAI;gBACN;aACD;QACH;IACF;IAIFE,2CAAmB,CAACC,OAAO,CAACpC,mBAAmB;QAAEqC,YAAY;QAAcJ,IAAI;IAAU;IACzFjC,kBAAkBsC,SAAS,CAACH,2CAAmB,EAAE;QAAEE,YAAY;QAAcJ,IAAI;IAAU;IAC3FjC,kBAAkBsC,SAAS,CAACN,qBAAS,EAAE;QAAEK,YAAY;QAAaJ,IAAI;IAAS;IAE/E,OAAOjC;AACT"}