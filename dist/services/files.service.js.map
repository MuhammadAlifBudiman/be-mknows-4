{"version":3,"sources":["../../src/services/files.service.ts"],"sourcesContent":["import { Service } from \"typedi\";\nimport { getDB } from \"@/database/db-lazy\";\n\nimport { File } from \"@interfaces/file.interface\";\nimport { HttpException } from \"@/exceptions/HttpException\";\n\n@Service()\nexport class FileService {\n  public async uploadSingleFile(user_id: number, file: Express.Multer.File): Promise<File> {\n    const DB = await getDB();\n    // Save S3 URL if available\n    const fileUpload = await DB.Files.create({\n      user_id,\n      name: file.filename,\n      type: file.mimetype,\n      size: file.size,\n      url: (file as any).location || null, // S3 URL from uploadToS3\n    });\n\n    delete fileUpload.dataValues.pk;\n    delete fileUpload.dataValues.name;\n    delete fileUpload.dataValues.user_id;\n\n    return fileUpload;\n  };\n  \n  public async getFileWithUUID(file_uuid: string): Promise<File> {\n    const DB = await getDB();\n    const file = await DB.Files.findOne({\n      attributes: [\"name\", \"url\"],\n      where: {\n        uuid: file_uuid\n      }\n    });\n\n    if(!file) throw new HttpException(false, 400, \"File is not found\");\n    return file;\n  };\n\n  public async getUserFiles(user_id: number): Promise<File[]> {\n    const DB = await getDB();\n    const files = await DB.Files.findAll({\n      attributes: { exclude: [\"pk\", \"user_id\", \"name\"] },\n      where: {\n        user_id\n      }\n    });\n\n    return files;\n  };\n};"],"names":["FileService","uploadSingleFile","user_id","file","DB","getDB","fileUpload","Files","create","name","filename","type","mimetype","size","url","location","dataValues","pk","getFileWithUUID","file_uuid","findOne","attributes","where","uuid","HttpException","getUserFiles","files","findAll","exclude"],"mappings":";;;;+BAOaA;;;eAAAA;;;wBAPW;wBACF;+BAGQ;;;;;;;AAGvB,IAAA,AAAMA,cAAN,MAAMA;IACX,MAAaC,iBAAiBC,OAAe,EAAEC,IAAyB,EAAiB;QACvF,MAAMC,KAAK,MAAMC,IAAAA,aAAK;QAEtB,MAAMC,aAAa,MAAMF,GAAGG,KAAK,CAACC,MAAM,CAAC;YACvCN;YACAO,MAAMN,KAAKO,QAAQ;YACnBC,MAAMR,KAAKS,QAAQ;YACnBC,MAAMV,KAAKU,IAAI;YACfC,KAAK,AAACX,KAAaY,QAAQ,IAAI;QACjC;QAEA,OAAOT,WAAWU,UAAU,CAACC,EAAE;QAC/B,OAAOX,WAAWU,UAAU,CAACP,IAAI;QACjC,OAAOH,WAAWU,UAAU,CAACd,OAAO;QAEpC,OAAOI;IACT;IAEA,MAAaY,gBAAgBC,SAAiB,EAAiB;QAC7D,MAAMf,KAAK,MAAMC,IAAAA,aAAK;QACtB,MAAMF,OAAO,MAAMC,GAAGG,KAAK,CAACa,OAAO,CAAC;YAClCC,YAAY;gBAAC;gBAAQ;aAAM;YAC3BC,OAAO;gBACLC,MAAMJ;YACR;QACF;QAEA,IAAG,CAAChB,MAAM,MAAM,IAAIqB,4BAAa,CAAC,OAAO,KAAK;QAC9C,OAAOrB;IACT;IAEA,MAAasB,aAAavB,OAAe,EAAmB;QAC1D,MAAME,KAAK,MAAMC,IAAAA,aAAK;QACtB,MAAMqB,QAAQ,MAAMtB,GAAGG,KAAK,CAACoB,OAAO,CAAC;YACnCN,YAAY;gBAAEO,SAAS;oBAAC;oBAAM;oBAAW;iBAAO;YAAC;YACjDN,OAAO;gBACLpB;YACF;QACF;QAEA,OAAOwB;IACT;AACF"}