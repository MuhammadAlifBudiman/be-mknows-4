{"version":3,"sources":["../../src/utils/userAgent.ts"],"sourcesContent":["import { Request } from \"express\";\nimport { UserAgent } from \"express-useragent\";\nimport { UserAgent as UserAgentInterface } from \"@/interfaces/common/useragent.interface\";\n\nexport const getUserAgent = (req: Request): UserAgentInterface => {\n  const userAgent = new UserAgent().parse(req.headers[\"user-agent\"] as string);\n\n  // const parsedUseragent = Object.entries(userAgent).reduce((obj, [key, value]) => {\n  //   if (typeof value == \"string\" && value.length !== 0) obj[key] = value;\n  //   return obj;\n  // }, {});\n\n  const userAgentPayload: UserAgentInterface = {\n    browser: userAgent.browser,\n    version: userAgent.version,\n    os: userAgent.os,\n    platform: userAgent.platform,\n    ip_address:\n      req.clientIp?.replace(\"::ffff:\", \"\") ||\n      req.socket.remoteAddress ||\n      req.connection.remoteAddress ||\n      req.headers[\"x-forwarded-for\"] as string,\n    referrer: req.headers.referer,\n    source: userAgent.source,\n  };\n\n  return userAgentPayload;\n};"],"names":["getUserAgent","req","userAgent","UserAgent","parse","headers","userAgentPayload","browser","version","os","platform","ip_address","clientIp","replace","socket","remoteAddress","connection","referrer","referer","source"],"mappings":";;;;+BAIaA;;;eAAAA;;;kCAHa;AAGnB,MAAMA,eAAe,CAACC;QAcvBA;IAbJ,MAAMC,YAAY,IAAIC,2BAAS,GAAGC,KAAK,CAACH,IAAII,OAAO,CAAC,aAAa;IAOjE,MAAMC,mBAAuC;QAC3CC,SAASL,UAAUK,OAAO;QAC1BC,SAASN,UAAUM,OAAO;QAC1BC,IAAIP,UAAUO,EAAE;QAChBC,UAAUR,UAAUQ,QAAQ;QAC5BC,YACEV,EAAAA,gBAAAA,IAAIW,QAAQ,cAAZX,oCAAAA,cAAcY,OAAO,CAAC,WAAW,QACjCZ,IAAIa,MAAM,CAACC,aAAa,IACxBd,IAAIe,UAAU,CAACD,aAAa,IAC5Bd,IAAII,OAAO,CAAC,kBAAkB;QAChCY,UAAUhB,IAAII,OAAO,CAACa,OAAO;QAC7BC,QAAQjB,UAAUiB,MAAM;IAC1B;IAEA,OAAOb;AACT"}