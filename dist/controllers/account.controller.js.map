{"version":3,"sources":["../../src/controllers/account.controller.ts"],"sourcesContent":["import { Response, NextFunction } from \"express\";\nimport asyncHandler from \"express-async-handler\";\nimport { Container } from \"typedi\";\n\nimport { User } from \"@interfaces/user.interface\";\nimport { UserSession } from \"@interfaces/user-session.interface\";\nimport { RequestWithUser } from \"@interfaces/authentication/token.interface\";\nimport { UpdateUserProfileDto } from \"@dtos/account.dto\";\n\nimport { AccountService } from \"@services/account.service\";\nimport { apiResponse } from \"@utils/apiResponse\";\n\n/**\n * AccountController handles user account-related operations.\n * Uses AccountService for business logic and apiResponse for standardized responses.\n */\nexport class AccountController {\n  /**\n   * AccountService instance for user operations\n   */\n  private account = Container.get(AccountService);\n\n  /**\n   * Get the profile of the authenticated user\n   * @param req - Express request with user info\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public getMyProfile = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const user_id = req.user.pk as number; // Extract user ID from request\n    const user: User = await this.account.getProfileByUserId(user_id); // Fetch user profile\n\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Profile Success\", user)); // Respond with profile\n  });\n\n  /**\n   * Get session histories for the authenticated user\n   * @param req - Express request with user and session info\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public getMySessionsHistories = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const user_id = req.user.pk as number; // Extract user ID\n    const session_id = req.session_id; // Extract session ID\n    const userSessions: UserSession[] = await this.account.getSessionsHistoriesByUserId(user_id, session_id); // Fetch session histories\n\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Sessions Histories Success\", userSessions)); // Respond with session histories\n  });\n\n  /**\n   * Update the profile of the authenticated user\n   * @param req - Express request with user info and update data\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public updateMyProfile = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const user_id = req.user.pk as number; // Extract user ID\n    const updatedProfile: UpdateUserProfileDto = req.body; // Get update data from request body\n\n    const user: User = await this.account.updateUserProfile(user_id, updatedProfile); // Update user profile\n\n    res.status(200).json(apiResponse(200, \"OK\", \"Update Profile Success\", user)); // Respond with updated profile\n  });\n}"],"names":["AccountController","account","Container","get","AccountService","getMyProfile","asyncHandler","req","res","next","user_id","user","pk","getProfileByUserId","status","json","apiResponse","getMySessionsHistories","session_id","userSessions","getSessionsHistoriesByUserId","updateMyProfile","updatedProfile","body","updateUserProfile"],"mappings":";;;;+BAgBaA;;;eAAAA;;;4EAfY;wBACC;gCAOK;6BACH;;;;;;;;;;;;;;;;;;;AAMrB,IAAA,AAAMA,oBAAN,MAAMA;;QAIX,uBAAQC,WAAUC,iBAAS,CAACC,GAAG,CAACC,8BAAc;QAQ9C,uBAAOC,gBAAeC,IAAAA,4BAAY,EAAC,OAAOC,KAAsBC,KAAeC;YAC7E,MAAMC,UAAUH,IAAII,IAAI,CAACC,EAAE;YAC3B,MAAMD,OAAa,MAAM,IAAI,CAACV,OAAO,CAACY,kBAAkB,CAACH;YAEzDF,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAACC,IAAAA,wBAAW,EAAC,KAAK,MAAM,uBAAuBL;QACrE;QAQA,uBAAOM,0BAAyBX,IAAAA,4BAAY,EAAC,OAAOC,KAAsBC,KAAeC;YACvF,MAAMC,UAAUH,IAAII,IAAI,CAACC,EAAE;YAC3B,MAAMM,aAAaX,IAAIW,UAAU;YACjC,MAAMC,eAA8B,MAAM,IAAI,CAAClB,OAAO,CAACmB,4BAA4B,CAACV,SAASQ;YAE7FV,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAACC,IAAAA,wBAAW,EAAC,KAAK,MAAM,kCAAkCG;QAChF;QAQA,uBAAOE,mBAAkBf,IAAAA,4BAAY,EAAC,OAAOC,KAAsBC,KAAeC;YAChF,MAAMC,UAAUH,IAAII,IAAI,CAACC,EAAE;YAC3B,MAAMU,iBAAuCf,IAAIgB,IAAI;YAErD,MAAMZ,OAAa,MAAM,IAAI,CAACV,OAAO,CAACuB,iBAAiB,CAACd,SAASY;YAEjEd,IAAIM,MAAM,CAAC,KAAKC,IAAI,CAACC,IAAAA,wBAAW,EAAC,KAAK,MAAM,0BAA0BL;QACxE;;AACF"}