{"version":3,"sources":["../../src/controllers/category.controller.ts"],"sourcesContent":["import { Response, NextFunction } from \"express\";\nimport asyncHandler from \"express-async-handler\";\nimport { Container } from \"typedi\";\n\nimport { RequestWithUser } from \"@interfaces/authentication/token.interface\";\n\nimport { CategoryService } from \"@services/categories.service\";\nimport { Category } from \"@interfaces/category.interface\";\n\nimport { CreateCategoryDto, UpdateCategoryDto } from \"@dtos/categories.dto\";\nimport { apiResponse } from \"@utils/apiResponse\";\n\nexport class CategoryController {\n  private category = Container.get(CategoryService);\n\n  public getCategories = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const response: Category[] = await this.category.getCategories();\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Category Success\", response));\n  });\n\n  public createCategory = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const data: CreateCategoryDto = req.body;\n\n    const response: Category = await this.category.createCategory(data);\n    res.status(201).json(apiResponse(201, \"OK\", \"Create Category Success\", response));\n  });\n\n  public updateCategory = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { category_id } = req.params;\n    const data: UpdateCategoryDto = req.body;\n\n    const response: Category = await this.category.updateCategory(category_id, data);\n    res.status(200).json(apiResponse(200, \"OK\", \"Update Category Success\", response));\n  });\n\n  public deleteCategory = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { category_id } = req.params;\n\n    await this.category.deleteCategory(category_id);\n    res.status(200).json(apiResponse(200, \"OK\", \"Delete Category Success\", {}));\n  });\n}"],"names":["CategoryController","category","Container","get","CategoryService","getCategories","asyncHandler","req","res","next","response","status","json","apiResponse","createCategory","data","body","updateCategory","category_id","params","deleteCategory"],"mappings":";;;;+BAYaA;;;eAAAA;;;4EAXY;wBACC;mCAIM;6BAIJ;;;;;;;;;;;;;;;;;;;AAErB,IAAA,AAAMA,qBAAN,MAAMA;;QACX,uBAAQC,YAAWC,iBAAS,CAACC,GAAG,CAACC,kCAAe;QAEhD,uBAAOC,iBAAgBC,IAAAA,4BAAY,EAAC,OAAOC,KAAsBC,KAAeC;YAC9E,MAAMC,WAAuB,MAAM,IAAI,CAACT,QAAQ,CAACI,aAAa;YAC9DG,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAACC,IAAAA,wBAAW,EAAC,KAAK,MAAM,wBAAwBH;QACtE;QAEA,uBAAOI,kBAAiBR,IAAAA,4BAAY,EAAC,OAAOC,KAAsBC,KAAeC;YAC/E,MAAMM,OAA0BR,IAAIS,IAAI;YAExC,MAAMN,WAAqB,MAAM,IAAI,CAACT,QAAQ,CAACa,cAAc,CAACC;YAC9DP,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAACC,IAAAA,wBAAW,EAAC,KAAK,MAAM,2BAA2BH;QACzE;QAEA,uBAAOO,kBAAiBX,IAAAA,4BAAY,EAAC,OAAOC,KAAsBC,KAAeC;YAC/E,MAAM,EAAES,WAAW,EAAE,GAAGX,IAAIY,MAAM;YAClC,MAAMJ,OAA0BR,IAAIS,IAAI;YAExC,MAAMN,WAAqB,MAAM,IAAI,CAACT,QAAQ,CAACgB,cAAc,CAACC,aAAaH;YAC3EP,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAACC,IAAAA,wBAAW,EAAC,KAAK,MAAM,2BAA2BH;QACzE;QAEA,uBAAOU,kBAAiBd,IAAAA,4BAAY,EAAC,OAAOC,KAAsBC,KAAeC;YAC/E,MAAM,EAAES,WAAW,EAAE,GAAGX,IAAIY,MAAM;YAElC,MAAM,IAAI,CAAClB,QAAQ,CAACmB,cAAc,CAACF;YACnCV,IAAIG,MAAM,CAAC,KAAKC,IAAI,CAACC,IAAAA,wBAAW,EAAC,KAAK,MAAM,2BAA2B,CAAC;QAC1E;;AACF"}