{"version":3,"sources":["../../src/controllers/article.controller.ts"],"sourcesContent":["import { Response, NextFunction } from \"express\";\nimport asyncHandler from \"express-async-handler\";\nimport { Container } from \"typedi\";\n\nimport { Article, ArticleParsed, ArticlePopularQueryParams, ArticleQueryParams } from \"@interfaces/article.interface\";\nimport { RequestWithUser } from \"@interfaces/authentication/token.interface\";\nimport { ArticleService } from \"@services/articles.service\";\n\nimport { CreateArticleDto, UpdateArticleDto } from \"@dtos/articles.dto\";\nimport { apiResponse } from \"@utils/apiResponse\";\n\nexport class ArticleController {\n  private article = Container.get(ArticleService);\n\n  public getArticles = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const query: ArticleQueryParams = req.query;\n    const response = await this.article.getArticles(query);\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Articles Success\", response.articles, response.pagination));\n  });\n\n  public getArticlesByCategory = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { category_id } = req.params;\n    const query: ArticleQueryParams = req.query;\n    const response = await this.article.getArticlesByCategory(query, category_id);\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Articles Success\", response.articles));\n  });\n\n  public getArticle = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { article_id } = req.params;\n    const user_id = req.user.pk as number;\n    this.article.addView(article_id, user_id);\n    const response: ArticleParsed = await this.article.getArticleById(article_id);\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Article Success\", response));\n  });\n\n  public createArticle = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const user_id = req.user.pk as number;\n    const data: CreateArticleDto = req.body;\n\n    const response: ArticleParsed = await this.article.createArticle(user_id, data);\n    res.status(201).json(apiResponse(201, \"OK\", \"Create Article Success\", response));\n  });\n\n  /**\n   * Update an article by ID for the authenticated user\n   * @param req - Express request with article ID, user ID, and update data\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public updateArticle = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { article_id } = req.params;\n    const user_id = req.user.pk as number;\n    const data: UpdateArticleDto = req.body;\n\n    const response: ArticleParsed = await this.article.updateArticle(article_id, user_id, data); // Update article\n    res.status(200).json(apiResponse(200, \"OK\", \"Update Article Success\", response)); // Respond with updated article\n  });\n\n  /**\n   * Delete an article by ID for the authenticated user\n   * @param req - Express request with article ID and user ID\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public deleteArticle = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { article_id } = req.params;\n    const user_id = req.user.pk as number;\n\n    await this.article.deleteArticle(article_id, user_id); // Delete article\n    res.status(200).json(apiResponse(200, \"OK\", \"Delete Article Success\", {})); // Respond with success\n  });\n\n  /**\n   * Like an article by ID for the authenticated user\n   * @param req - Express request with article ID and user ID\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public likeArticle = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { article_id } = req.params;\n    const user_id = req.user.pk as number;\n\n    const response = await this.article.likeArticle(user_id, article_id); // Like article\n    res.status(200).json(apiResponse(200, \"OK\", \"Like Article Success\", response)); // Respond with like result\n  });\n\n  /**\n   * Bookmark an article by ID for the authenticated user\n   * @param req - Express request with article ID and user ID\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public bookmarkArticle = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const { article_id } = req.params;\n    const user_id = req.user.pk as number;\n\n    const response = await this.article.bookmarkArticle(user_id, article_id); // Bookmark article\n    res.status(200).json(apiResponse(200, \"OK\", \"Bookmark Article Success\", response)); // Respond with bookmark result\n  });\n\n  /**\n   * Get all articles bookmarked by the authenticated user\n   * @param req - Express request with user ID\n   * @param res - Express response\n   * @param next - Express next middleware\n   */\n  public getBookmarkByMe = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const user_id = req.user.pk as number;\n\n    const response = await this.article.getBookmarkByMe(user_id); // Get user's bookmarks\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Bookmark Success\", response.articles));\n  });\n\n  public getPopularArticles = asyncHandler(async (req: RequestWithUser, res: Response, next: NextFunction) => {\n    const query: ArticlePopularQueryParams = req.query;\n    const response = await this.article.getPopularArticles(query);\n    res.status(200).json(apiResponse(200, \"OK\", \"Get Popular Articles Success\", response.articles ));\n  });\n}"],"names":["ArticleController","article","Container","get","ArticleService","getArticles","asyncHandler","req","res","next","query","response","status","json","apiResponse","articles","pagination","getArticlesByCategory","category_id","params","getArticle","article_id","user_id","user","pk","addView","getArticleById","createArticle","data","body","updateArticle","deleteArticle","likeArticle","bookmarkArticle","getBookmarkByMe","getPopularArticles"],"mappings":"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"}